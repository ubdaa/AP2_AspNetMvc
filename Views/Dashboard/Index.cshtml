@model DashboardViewModel

@{
    ViewBag.Title = "Tableau de bord";
    Layout = "_Layout";
}
@{
    ViewData["Title"] = "Dashboard";
}

<div class="container mt-4">
    <!-- Section titre principal -->
    <h1 class="mb-4">Tableau de bord</h1>

    <!-- Statistiques principales -->
    <div class="row">
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card text-white bg-primary h-100">
                <div class="card-body">
                    <h5 class="card-title">Total des Patients</h5>
                    <p class="card-text display-4">@Model.TotalPatients</p>
                </div>
                <div class="card-footer">
                    <small class="text-white">Par rapport à votre profil</small>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card text-white bg-success h-100">
                <div class="card-body">
                    <h5 class="card-title">Total d'Ordonnances</h5>
                    <p class="card-text display-4">@Model.TotalPrescriptions</p>
                </div>
                <div class="card-footer">
                    <small class="text-white">Total de toutes vos ordonnances</small>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card text-white bg-warning h-100">
                <div class="card-body">
                    <h5 class="card-title">Prescriptions terminées</h5>
                    <p class="card-text display-4">@Model.TotalArchivedPrescriptions</p>
                </div>
                <div class="card-footer">
                    <small class="text-white">Nombre ordonnances terminées</small>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card text-white bg-danger h-100">
                <div class="card-body">
                    <h5 class="card-title">Nombre d'incompatibilités</h5>
                    <p class="card-text display-4">@Model.TotalIncompatibilities</p>
                </div>
                <div class="card-footer">
                    <small class="text-white">Avec allergies et antécédents</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Section ordonnances en cours -->
    <div class="card mt-4">
        <div class="card-header">
            <h5>Vos dernières ordonnances</h5>
        </div>
        <div class="card-body">
            @if (Model.Prescriptions.Count > 0)
            {
                @await Html.PartialAsync("Tables/_PrescriptionTable", Model.Prescriptions)
            }
            else
            {
                <p class="mt-2 text-center">Aucune ordonnance en cours</p>
            }
            <a asp-controller="Prescription" asp-action="Create" class="btn btn-primary">Créer une nouvelle ordonnance</a>
        </div>
    </div>

    <!-- Section derniers patients -->
    <div class="card mt-4">
        <div class="card-header">
            <h5>Derniers patients ajoutés</h5>
        </div>
        <div class="card-body">
            @if (Model.Patients.Count > 0)
            {
                @await Html.PartialAsync("Tables/_PatientTable", Model.Patients)
            }
            else
            {
                <p class="mt-2 text-center">Aucun patient enregistré pour votre profil</p>
            }
            <a asp-controller="Patient" asp-action="Add" class="btn btn-primary">Créer un nouveau patient</a>
        </div>
    </div>
    
    <h3 class="my-4">Statistiques</h3>

    <!-- Section statistiques -->
    <div class="row mt-4">
        
        <div class="col-4">
            <div class="card h-100">
                <div class="card-header">
                    <h5>Patients les plus consultés</h5>
                </div>
                <div class="card-body">
                    <canvas id="patientsChart"></canvas>
                </div>
            </div>
        </div>
        
        <div class="col-4">
            <div class="card h-100">
                <div class="card-header">
                    <h5>Médicaments les plus prescrits</h5>
                </div>
                <div class="card-body">
                    <canvas id="medicamentsChart"></canvas>
                </div>
            </div>
        </div>

        <div class="col-4">
            <div class="card h-100">
                <div class="card-header">
                    <h5>Allergies les plus fréquentes</h5>
                </div>
                <div class="card-body">
                    <canvas id="allergiesChart"></canvas>
                </div>
            </div>
        </div>
        
    </div>
    
    <div class="row my-4">
        
        <div class="col-6">
            <div class="card h-100">
                <div class="card-header">
                    <h5>Nombre de patients par catégories d'âge</h5>
                </div>
                <div class="card-body">
                    <canvas id="ageChart"></canvas>
                </div>
            </div>
        </div>


        <div class="col-6">
            <div class="card h-100">
                <div class="card-header">
                    <h5>Nombre de médicaments par types</h5>
                </div>
                <div class="card-body">
                    <canvas id="medicamentsTypeChart"></canvas>
                </div>
            </div>
        </div>
        
    </div>
</div>

@section Scripts
{
    <script>
        window.onload = function () {
            // Most consulted patients chart
            InitChart(
                @Html.Raw(Json.Serialize(Model.MostConsultedPatientsStatVm.Data)),
                @Html.Raw(Json.Serialize(Model.MostConsultedPatientsStatVm.Labels)),
                '@Model.MostConsultedPatientsStatVm.Label',
                '@Model.MostConsultedPatientsStatVm.ChartName',
                '@Model.MostConsultedPatientsStatVm.ChartType',
                @Html.Raw(Json.Serialize(Model.MostConsultedPatientsStatVm.BorderColor)),
                @Html.Raw(Json.Serialize(Model.MostConsultedPatientsStatVm.BackgroundColor))
            );
            
            // Most prescribed medicaments chart
            InitChart(
                @Html.Raw(Json.Serialize(Model.MostPrescribedMedicamentsStatVm.Data)),
                @Html.Raw(Json.Serialize(Model.MostPrescribedMedicamentsStatVm.Labels)),
                '@Model.MostPrescribedMedicamentsStatVm.Label',
                '@Model.MostPrescribedMedicamentsStatVm.ChartName',
                '@Model.MostPrescribedMedicamentsStatVm.ChartType',
                @Html.Raw(Json.Serialize(Model.MostPrescribedMedicamentsStatVm.BorderColor)),
                @Html.Raw(Json.Serialize(Model.MostPrescribedMedicamentsStatVm.BackgroundColor))
            );
            
            // Most frequent allergies chart
            InitChart(
                @Html.Raw(Json.Serialize(Model.MostCommonAllergyStatVm.Data)),
                @Html.Raw(Json.Serialize(Model.MostCommonAllergyStatVm.Labels)),
                '@Model.MostCommonAllergyStatVm.Label',
                '@Model.MostCommonAllergyStatVm.ChartName',
                '@Model.MostCommonAllergyStatVm.ChartType',
                @Html.Raw(Json.Serialize(Model.MostCommonAllergyStatVm.BorderColor)),
                @Html.Raw(Json.Serialize(Model.MostCommonAllergyStatVm.BackgroundColor))
            );

            // Patients by age chart
            InitChart(
                @Html.Raw(Json.Serialize(Model.PatientsByAgeStatVm.Data)),
                @Html.Raw(Json.Serialize(Model.PatientsByAgeStatVm.Labels)),
                '@Model.PatientsByAgeStatVm.Label',
                '@Model.PatientsByAgeStatVm.ChartName',
                '@Model.PatientsByAgeStatVm.ChartType',
                @Html.Raw(Json.Serialize(Model.PatientsByAgeStatVm.BorderColor)),
                @Html.Raw(Json.Serialize(Model.PatientsByAgeStatVm.BackgroundColor))
            );
            
            // Medicaments by type chart
            InitChart(
                @Html.Raw(Json.Serialize(Model.MedicamentsByTypeStatVm.Data)),
                @Html.Raw(Json.Serialize(Model.MedicamentsByTypeStatVm.Labels)),
                '@Model.MedicamentsByTypeStatVm.Label',
                '@Model.MedicamentsByTypeStatVm.ChartName',
                '@Model.MedicamentsByTypeStatVm.ChartType',
                @Html.Raw(Json.Serialize(Model.MedicamentsByTypeStatVm.BorderColor)),
                @Html.Raw(Json.Serialize(Model.MedicamentsByTypeStatVm.BackgroundColor))
            );
        };
    </script>
}
